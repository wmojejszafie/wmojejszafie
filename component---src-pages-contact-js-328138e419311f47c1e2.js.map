{"version":3,"sources":["webpack:///./src/components/ContactForm.js","webpack:///./src/pages/contact.js","webpack:///./src/components/PageTitle.js"],"names":["Form","props","theme","sizes","maxWidthCentered","colors","tertiary","text","overlay","Name","responsive","small","Email","Message","Submit","highlight","Modal","visible","Button","ContactForm","handleInputChange","event","target","value","name","setState","handleSubmit","data","fetch","method","headers","body","state","Object","keys","map","key","encodeURIComponent","join","then","handleSuccess","catch","error","alert","preventDefault","email","message","showModal","closeModal","render","onSubmit","this","data-netlify","data-netlify-honeypot","onClick","type","hidden","onChange","placeholder","required","React","Component","Contact","Layout","SEO","title","description","Container","PageTitle","Title","children"],"mappings":"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","file":"component---src-pages-contact-js-328138e419311f47c1e2.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\n/*\r\n  ⚠️ This is an example of a contact form powered with Netlify form handling.\r\n  Be sure to review the Netlify documentation for more information:\r\n  https://www.netlify.com/docs/form-handling/\r\n*/\r\n\r\nconst Form = styled.form`\r\n  max-width: ${props => props.theme.sizes.maxWidthCentered};\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  input,\r\n  textarea {\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    background: ${props => props.theme.colors.tertiary};\r\n    color: ${props => props.theme.colors.text};\r\n    border-radius: 2px;\r\n    padding: 1em;\r\n    &::-webkit-input-placeholder {\r\n      color: gray;\r\n    }\r\n    &::-moz-placeholder {\r\n      color: gray;\r\n    }\r\n    &:-ms-input-placeholder {\r\n      color: gray;\r\n    }\r\n    &:-moz-placeholder {\r\n      color: gray;\r\n    }\r\n    &:required {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  &::before {\r\n    content: '';\r\n    background: black;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    transition: 0.2s all;\r\n    opacity: ${props => (props.overlay ? '.8' : '0')};\r\n    visibility: ${props => (props.overlay ? 'visible' : 'hidden')};\r\n  }\r\n`\r\n\r\nconst Name = styled.input`\r\n  margin: 0 0 1em 0;\r\n  width: 100%;\r\n  @media (min-width: ${props => props.theme.responsive.small}) {\r\n    width: 49%;\r\n  }\r\n`\r\n\r\nconst Email = styled.input`\r\n  margin: 0 0 1em 0;\r\n  width: 100%;\r\n  @media (min-width: ${props => props.theme.responsive.small}) {\r\n    width: 49%;\r\n  }\r\n`\r\n\r\nconst Message = styled.textarea`\r\n  width: 100%;\r\n  margin: 0 0 1em 0;\r\n  line-height: 1.6;\r\n  min-height: 250px;\r\n  resize: vertical;\r\n`\r\n\r\nconst Submit = styled.input`\r\n  background: ${props => props.theme.colors.text} !important;\r\n  color: white !important;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background: ${props => props.theme.colors.highlight} !important;\r\n  }\r\n`\r\n\r\nconst Modal = styled.div`\r\n  background: white;\r\n  padding: 2em;\r\n  border-radius: 2px;\r\n  position: fixed;\r\n  min-width: 75%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0 auto;\r\n  z-index: 99;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  transition: 0.2s all;\r\n  opacity: ${props => (props.visible ? '1' : '0')};\r\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\r\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\r\n    min-width: inherit;\r\n    max-width: 400px;\r\n  }\r\n  p {\r\n    line-height: 1.6;\r\n    margin: 0 0 2em 0;\r\n  }\r\n`\r\n\r\nconst Button = styled.div`\r\n  background: ${props => props.theme.colors.text};\r\n  font-size: 1em;\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  color: white;\r\n  padding: 1em;\r\n  border-radius: 2px;\r\n  text-decoration: none;\r\n  transition: 0.2s;\r\n  z-index: 99;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    background: ${props => props.theme.colors.highlight};\r\n  }\r\n`\r\n\r\nconst encode = data => {\r\n  return Object.keys(data)\r\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\r\n    .join('&')\r\n}\r\n\r\nclass ContactForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n      showModal: false,\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    fetch('/?no-cache=1', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: encode({ 'form-name': 'contact', ...this.state }),\r\n    })\r\n      .then(this.handleSuccess)\r\n      .catch(error => alert(error))\r\n    event.preventDefault()\r\n  }\r\n\r\n  handleSuccess = () => {\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n      showModal: true,\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        name=\"contact\"\r\n        onSubmit={this.handleSubmit}\r\n        data-netlify=\"true\"\r\n        data-netlify-honeypot=\"bot\"\r\n        overlay={this.state.showModal}\r\n        onClick={this.closeModal}\r\n      >\r\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n        <p hidden>\r\n          <label>\r\n            Don’t fill this out:{' '}\r\n            <input name=\"bot\" onChange={this.handleInputChange} />\r\n          </label>\r\n        </p>\r\n\r\n        <Name\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <Email\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={this.state.email}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <Message\r\n          name=\"message\"\r\n          type=\"text\"\r\n          placeholder=\"Message\"\r\n          value={this.state.message}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <Submit name=\"submit\" type=\"submit\" value=\"Send\" />\r\n\r\n        <Modal visible={this.state.showModal}>\r\n          <p>\r\n            Thank you for reaching out. I will get back to you as soon as\r\n            possible.\r\n          </p>\r\n          <Button onClick={this.closeModal}>Okay</Button>\r\n        </Modal>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  data: PropTypes.object,\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport Layout from '../components/Layout'\r\nimport Container from '../components/Container'\r\nimport PageTitle from '../components/PageTitle'\r\nimport ContactForm from '../components/ContactForm'\r\nimport SEO from '../components/SEO'\r\n\r\nconst Contact = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Contact\" description=\"Contact description goes here\" />\r\n      <Container>\r\n        <PageTitle>Contact</PageTitle>\r\n        <ContactForm />\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Title = styled.h1`\r\n  font-size: ${props => (props.small ? '2em' : '3em')};\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin: 0 0 3rem 0;\r\n  margin: ${props => (props.small ? '1rem 0 4rem 0' : '0 0 3rem 0')};\r\n  line-height: 1.2;\r\n  span {\r\n    margin: 0 0 0 0.25em;\r\n  }\r\n  a {\r\n    transition: all 0.2s;\r\n    color: ${props => props.theme.colors.text};\r\n    &:hover {\r\n      color: ${props => props.theme.colors.highlight};\r\n    }\r\n  }\r\n`\r\n\r\nconst PageTitle = props => {\r\n  return <Title small={props.small}>{props.children}</Title>\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}